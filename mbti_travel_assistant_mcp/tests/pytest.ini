[tool:pytest]
# Pytest configuration for MBTI Travel Assistant MCP

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance and load tests
    slow: Slow running tests
    mcp: Tests that require MCP servers
    auth: Tests that require authentication

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes

# Coverage options
# (These are overridden by command line options in run_comprehensive_tests.py)
# --cov=services
# --cov=models
# --cov=main
# --cov-report=term-missing
# --cov-report=html:tests/results/coverage_html
# --cov-fail-under=90

# Timeout for tests (in seconds)
timeout = 300

# Minimum Python version
minversion = 3.10

# Test session configuration
console_output_style = progress
junit_family = xunit2

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:moto.*
    ignore::UserWarning:boto3.*

# Asyncio configuration
asyncio_mode = auto

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Disable cacheprov plugin warnings
cache_dir = tests/.pytest_cache