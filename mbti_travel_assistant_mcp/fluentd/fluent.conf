# Fluentd Configuration for MBTI Travel Assistant MCP
# This configuration aggregates logs from Docker containers and forwards them to CloudWatch

<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# Docker container logs
<source>
  @type tail
  path /var/lib/docker/containers/*/*-json.log
  pos_file /fluentd/log/containers.log.pos
  tag docker.*
  format json
  time_key time
  time_format %Y-%m-%dT%H:%M:%S.%NZ
</source>

# Application logs from mounted volume
<source>
  @type tail
  path /var/log/mbti-travel-assistant/*.log
  pos_file /fluentd/log/application.log.pos
  tag application.*
  format json
  time_key timestamp
  time_format %Y-%m-%d %H:%M:%S
</source>

# Nginx access logs
<source>
  @type tail
  path /var/log/nginx/access.log
  pos_file /fluentd/log/nginx_access.log.pos
  tag nginx.access
  format nginx
</source>

# Nginx error logs
<source>
  @type tail
  path /var/log/nginx/error.log
  pos_file /fluentd/log/nginx_error.log.pos
  tag nginx.error
  format /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)$/
</source>

# Parse Docker container logs
<filter docker.**>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type json
  </parse>
</filter>

# Add container metadata
<filter docker.**>
  @type record_transformer
  <record>
    container_id ${tag_parts[1]}
    service_name ${tag_parts[2] || "unknown"}
    environment "#{ENV['ENVIRONMENT'] || 'development'}"
    timestamp ${time}
  </record>
</filter>

# Filter and enrich application logs
<filter application.**>
  @type record_transformer
  <record>
    service_name "mbti-travel-assistant"
    environment "#{ENV['ENVIRONMENT'] || 'development'}"
    log_source "application"
  </record>
</filter>

# Filter and enrich nginx logs
<filter nginx.**>
  @type record_transformer
  <record>
    service_name "nginx"
    environment "#{ENV['ENVIRONMENT'] || 'development'}"
    log_source "nginx"
  </record>
</filter>

# Add common fields to all logs
<filter **>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    fluentd_version "#{Fluent::VERSION}"
  </record>
</filter>

# Output to CloudWatch Logs (if configured)
<match **>
  @type cloudwatch_logs
  log_group_name "/aws/containerinsights/mbti-travel-assistant"
  log_stream_name_key container_id
  auto_create_stream true
  region "#{ENV['AWS_REGION'] || 'us-east-1'}"
  
  # Buffer configuration
  <buffer>
    @type file
    path /fluentd/log/buffer/cloudwatch
    flush_mode interval
    flush_interval 10s
    chunk_limit_size 1m
    queue_limit_length 32
    retry_max_interval 30
    retry_forever true
  </buffer>
  
  # Format
  <format>
    @type json
  </format>
</match>

# Fallback output to stdout for debugging
<match **>
  @type copy
  <store>
    @type stdout
    <format>
      @type json
    </format>
  </store>
</match>