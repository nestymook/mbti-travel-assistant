# AgentCore Gateway Configuration Template
# Copy this file to config.yaml and update with your environment-specific settings

# AWS Configuration
account_id: "YOUR_ACCOUNT_ID"
region: "REGION"
# IAM role used to create and manage the gateway
# This role must have BedrockAgentCoreFullAccess policy and trust policy for bedrock-agentcore.amazonaws.com
# For testing: This can be the role of your current EC2 instance or notebook
# For production: Use a dedicated role for the gateway (recommended)
# To find your current role, run: aws sts get-caller-identity
role_name: "YOUR_ROLE_NAME"
endpoint_url: "https://bedrock-agentcore-control.REGION.amazonaws.com"
credential_provider_endpoint_url: "https://REGION.prod.agent-credential-provider.cognito.aws.dev"

# Cognito Configuration
# These parameters are automatically generated by running deployment/setup_cognito.sh
# The script prints out the values and saves them to deployment/.cognito_config file
user_pool_id: "YOUR_USER_POOL_ID"
client_id: "YOUR_CLIENT_ID"

# S3 Configuration
s3_bucket: "your-agentcore-schemas-bucket"
s3_path_prefix: "devops-multiagent-demo"  # Path prefix for OpenAPI schema files

# Provider Configuration
# Name for the API key credential provider used by backend services for authentication
credential_provider_name: "sre-agent-api-key-credential-provider"
# This ARN is automatically generated by create_gateway.sh when it runs create_credentials_provider.py
provider_arn: "arn:aws:bedrock-agentcore:REGION:ACCOUNT_ID:token-vault/default/apikeycredentialprovider/sre-agent-api-key-credential-provider"

# Gateway Configuration
gateway_name: "MyAgentCoreGateway"
gateway_description: "AgentCore Gateway for API Integration"

# Target Configuration
target_description: "S3 target for OpenAPI schema"