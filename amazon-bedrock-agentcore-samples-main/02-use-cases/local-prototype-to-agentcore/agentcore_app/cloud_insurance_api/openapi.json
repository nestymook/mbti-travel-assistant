{
  "openapi": "3.0.2",
  "info": {
    "title": "Auto Insurance API",
    "version": "0.1.0",
    "description": "API for auto insurance services including customer information, vehicle data, and policy management"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "getRoot",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Health check endpoint",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "summary": "Test",
        "description": "Test endpoint with sample data",
        "operationId": "getTest",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customer_info": {
      "post": {
        "summary": "Get Customer Info",
        "description": "Get customer information",
        "operationId": "getCustomerInfo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing customer_id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customer_credit": {
      "post": {
        "summary": "Get Customer Credit",
        "description": "Get customer credit information",
        "operationId": "getCustomerCredit",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing customer_id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Credit information not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vehicle_info": {
      "post": {
        "summary": "Get Vehicle Info",
        "description": "Get vehicle information",
        "operationId": "getVehicleInfo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vehicle_safety": {
      "post": {
        "summary": "Get Vehicle Safety",
        "description": "Get vehicle safety information",
        "operationId": "getVehicleSafety",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleSafetyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleSafetyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/risk_factors": {
      "post": {
        "summary": "Get Risk Factors",
        "description": "Get risk factors for insurance quote",
        "operationId": "getRiskFactors",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskFactorsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RiskFactorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing customer_id parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/insurance_products": {
      "post": {
        "summary": "Get Insurance Products",
        "description": "Get available insurance products\n\nOptional parameters:\n- product_id: string or list - Filter by specific product ID(s)\n- price_range: dict - Filter by price range with 'min' and/or 'max' keys\n- coverage_includes: list - Filter products that include specific coverage types\n- discount_includes: list - Filter products that offer specific discounts\n- sort_by: string - Sort by 'price', 'rating', or 'name'\n- sort_order: string - 'asc' or 'desc' (default: 'asc')\n- include_details: boolean - Include full details or basic info (default: true)\n- format: string - 'full' or 'summary' response format (default: 'full')",
        "operationId": "getInsuranceProducts",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsuranceProductsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InsuranceProductsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/policies": {
      "get": {
        "summary": "Get All Policies",
        "description": "Get all policies",
        "operationId": "getAllPolicies",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Get Filtered Policies",
        "description": "Get policies with optional filtering\n\nOptional parameters:\n- policy_id: string - Filter by specific policy ID\n- customer_id: string - Filter by customer ID\n- status: string - Filter by status (active, expired, etc.)\n- include_vehicles: boolean - Include vehicle details in response (default: true)",
        "operationId": "filterPolicies",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilteredPoliciesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoliciesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/policies/{policy_id}": {
      "get": {
        "summary": "Get Policy By Id",
        "description": "Get a specific policy by ID",
        "operationId": "getPolicyById",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Policy Id",
              "type": "string"
            },
            "name": "policy_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customer_id}/policies": {
      "get": {
        "summary": "Get Customer Policies",
        "description": "Get all policies for a specific customer",
        "operationId": "getCustomerPolicies",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Customer Id",
              "type": "string"
            },
            "name": "customer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPoliciesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RootResponse": {
        "title": "Root Response",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Auto Insurance API"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "/customer_info",
              "/customer_credit",
              "/vehicle_info",
              "/risk_factors",
              "/insurance_products",
              "/vehicle_safety",
              "/health"
            ]
          }
        }
      },
      "HealthResponse": {
        "title": "Health Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-19T18:00:00Z"
          }
        }
      },
      "TestResponse": {
        "title": "Test Response",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Test successful - using real data"
          },
          "sample_data": {
            "type": "object",
            "properties": {
              "customers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["John Doe (C12345)", "Jane Smith (C54321)"]
              },
              "vehicles": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["Toyota Camry", "Honda Accord"]
              },
              "data_source": {
                "type": "string",
                "example": "auto-insurance-prototype/data folder"
              }
            }
          }
        }
      },
      "CustomerInfoRequest": {
        "title": "Customer Info Request",
        "type": "object",
        "required": ["customer_id"],
        "properties": {
          "customer_id": {
            "type": "string",
            "description": "Unique identifier for the customer",
            "example": "C12345"
          }
        }
      },
      "CustomerInfoResponse": {
        "title": "Customer Info Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "customer_info": {
            "type": "object",
            "properties": {
              "full_name": {
                "type": "string",
                "example": "John Doe"
              },
              "age": {
                "type": "integer",
                "example": 35
              },
              "email": {
                "type": "string",
                "format": "email",
                "example": "john.doe@example.com"
              },
              "phone": {
                "type": "string",
                "example": "555-123-4567"
              },
              "address": {
                "type": "string",
                "example": "123 Main St, Anytown, CA 12345"
              },
              "address_formatted": {
                "type": "string",
                "example": "123 Main St, Anytown, CA 12345"
              },
              "license_number": {
                "type": "string",
                "example": "D12345678"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "example": "1990-01-01"
              }
            }
          }
        }
      },
      "CustomerCreditResponse": {
        "title": "Customer Credit Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "credit_info": {
            "type": "object",
            "properties": {
              "customer_id": {
                "type": "string",
                "example": "C12345"
              },
              "credit_score": {
                "type": "integer",
                "example": 750
              },
              "credit_history_length": {
                "type": "integer",
                "example": 10
              },
              "payment_history": {
                "type": "string",
                "enum": ["excellent", "good", "fair", "poor"],
                "example": "good"
              },
              "debt_to_income_ratio": {
                "type": "number",
                "format": "float",
                "example": 0.28
              }
            }
          }
        }
      },
      "VehicleInfoRequest": {
        "title": "Vehicle Info Request",
        "type": "object",
        "required": ["make", "model", "year"],
        "properties": {
          "make": {
            "type": "string",
            "example": "Toyota"
          },
          "model": {
            "type": "string",
            "example": "Camry"
          },
          "year": {
            "type": "integer",
            "example": 2023
          }
        }
      },
      "VehicleInfoResponse": {
        "title": "Vehicle Info Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "vehicle_info": {
            "type": "object",
            "properties": {
              "make": {
                "type": "string",
                "example": "Toyota"
              },
              "model": {
                "type": "string",
                "example": "Camry"
              },
              "year": {
                "type": "string",
                "example": "2023"
              },
              "display_name": {
                "type": "string",
                "example": "2023 Toyota Camry"
              },
              "category": {
                "type": "string",
                "example": "standard"
              },
              "safety_rating": {
                "type": "string",
                "example": "4_star"
              },
              "value": {
                "type": "integer",
                "example": 25000
              },
              "current_value": {
                "type": "integer",
                "example": 20000
              },
              "age": {
                "type": "integer",
                "example": 2
              },
              "is_new": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "VehicleSafetyRequest": {
        "title": "Vehicle Safety Request",
        "type": "object",
        "required": ["make", "model"],
        "properties": {
          "make": {
            "type": "string",
            "example": "Toyota"
          },
          "model": {
            "type": "string",
            "example": "Camry"
          }
        }
      },
      "VehicleSafetyResponse": {
        "title": "Vehicle Safety Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "safety_info": {
            "type": "object",
            "properties": {
              "make": {
                "type": "string",
                "example": "Toyota"
              },
              "model": {
                "type": "string",
                "example": "Camry"
              },
              "overall_rating": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "frontal_crash": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "side_crash": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "rollover": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "safety_features": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "Automatic Emergency Braking",
                  "Blind Spot Monitoring",
                  "Lane Departure Warning",
                  "Adaptive Cruise Control"
                ]
              }
            }
          }
        }
      },
      "RiskFactorsRequest": {
        "title": "Risk Factors Request",
        "type": "object",
        "required": ["customer_id"],
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "C12345"
          },
          "vehicle_info": {
            "type": "object",
            "properties": {
              "make": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "year": {
                "type": "integer"
              }
            }
          }
        }
      },
      "RiskFactorsResponse": {
        "title": "Risk Factors Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "risk_factors": {
            "type": "object",
            "properties": {
              "age_risk": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "low"
              },
              "driving_history_risk": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "low"
              },
              "credit_risk": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "low"
              },
              "vehicle_risk": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "medium"
              },
              "overall_risk": {
                "type": "string",
                "enum": ["low", "medium", "high"],
                "example": "low"
              }
            }
          }
        }
      },
      "InsuranceProductsRequest": {
        "title": "Insurance Products Request",
        "type": "object",
        "properties": {
          "product_id": {
            "oneOf": [
              {
                "type": "string",
                "example": "basic-auto"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": ["basic-auto", "standard-auto"]
              }
            ]
          },
          "price_range": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 500
              },
              "max": {
                "type": "number",
                "example": 1500
              }
            }
          },
          "coverage_includes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "liability",
                "collision",
                "comprehensive",
                "uninsured_motorist",
                "rental_reimbursement",
                "roadside_assistance",
                "medical_payments"
              ]
            },
            "example": ["collision", "comprehensive"]
          },
          "discount_includes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["safe_driver", "multi_policy"]
          },
          "sort_by": {
            "type": "string",
            "enum": ["price", "rating", "name"],
            "example": "price"
          },
          "sort_order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "asc",
            "example": "asc"
          },
          "include_details": {
            "type": "boolean",
            "default": true,
            "example": true
          },
          "format": {
            "type": "string",
            "enum": ["full", "summary"],
            "default": "full",
            "example": "full"
          }
        }
      },
      "InsuranceProductsResponse": {
        "title": "Insurance Products Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "total_products": {
            "type": "integer",
            "example": 3
          },
          "filters_applied": {
            "type": "object",
            "properties": {
              "product_id": {
                "type": "boolean",
                "example": true
              },
              "price_range": {
                "type": "boolean",
                "example": true
              },
              "coverage_includes": {
                "type": "boolean",
                "example": false
              },
              "discount_includes": {
                "type": "boolean",
                "example": false
              }
            }
          },
          "sort": {
            "type": "object",
            "properties": {
              "by": {
                "type": "string",
                "example": "price"
              },
              "order": {
                "type": "string",
                "example": "asc"
              }
            },
            "nullable": true
          },
          "format": {
            "type": "string",
            "example": "full"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-01T09:30:00Z"
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsuranceProduct"
            }
          }
        }
      },
      "InsuranceProduct": {
        "title": "Insurance Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "basic-auto"
          },
          "name": {
            "type": "string",
            "example": "Basic Auto Coverage"
          },
          "description": {
            "type": "string",
            "example": "Essential coverage at an affordable price"
          },
          "base_price": {
            "type": "number",
            "example": 600
          },
          "price_range": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number",
                "example": 600
              },
              "max": {
                "type": "number",
                "example": 1080
              },
              "currency": {
                "type": "string",
                "example": "USD"
              },
              "billing_period": {
                "type": "string",
                "example": "semi-annual"
              }
            }
          },
          "coverage_examples": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "Liability"
                },
                "limits": {
                  "type": "string",
                  "example": "$100,000 per accident"
                },
                "included": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "eligible_discounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Safe Driver"
                },
                "description": {
                  "type": "string",
                  "example": "Discount for drivers with no accidents in the past 3 years"
                },
                "percentage": {
                  "type": "number",
                  "example": 15
                }
              }
            }
          },
          "customer_rating": {
            "type": "number",
            "example": 4.5
          },
          "reviews_count": {
            "type": "integer",
            "example": 120
          },
          "recommended_for": {
            "type": "string",
            "example": "New drivers, budget-conscious individuals, or second vehicles"
          }
        }
      },
      "FilteredPoliciesRequest": {
        "title": "Filtered Policies Request",
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "string",
            "example": "POL-12345"
          },
          "customer_id": {
            "type": "string",
            "example": "C12345"
          },
          "status": {
            "type": "string",
            "enum": ["active", "expired", "cancelled", "pending"],
            "example": "active"
          },
          "include_vehicles": {
            "type": "boolean",
            "default": true,
            "example": true
          }
        }
      },
      "PoliciesResponse": {
        "title": "Policies Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "count": {
            "type": "integer",
            "example": 2
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "PolicyResponse": {
        "title": "Policy Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "policy": {
            "$ref": "#/components/schemas/Policy"
          }
        }
      },
      "CustomerPoliciesResponse": {
        "title": "Customer Policies Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "customer_id": {
            "type": "string",
            "example": "C12345"
          },
          "count": {
            "type": "integer",
            "example": 2
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Policy"
            }
          }
        }
      },
      "Policy": {
        "title": "Policy",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "POL-12345"
          },
          "customer_id": {
            "type": "string",
            "example": "C12345"
          },
          "type": {
            "type": "string",
            "example": "auto"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "example": "2025-01-01"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "example": "2025-07-01"
          },
          "premium": {
            "type": "number",
            "example": 750
          },
          "status": {
            "type": "string",
            "enum": ["active", "expired", "cancelled", "pending"],
            "example": "active"
          },
          "coverage": {
            "type": "object",
            "properties": {
              "liability": {
                "type": "number",
                "example": 100000
              },
              "collision": {
                "type": "boolean",
                "example": true
              },
              "comprehensive": {
                "type": "boolean",
                "example": true
              },
              "uninsured_motorist": {
                "type": "boolean",
                "example": true
              },
              "rental_reimbursement": {
                "type": "boolean",
                "example": false
              },
              "roadside_assistance": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "vehicles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "make": {
                  "type": "string",
                  "example": "Toyota"
                },
                "model": {
                  "type": "string",
                  "example": "Camry"
                },
                "year": {
                  "type": "string",
                  "example": "2023"
                },
                "vin": {
                  "type": "string",
                  "example": "1HGCM82633A123456"
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "title": "Error Response",
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "example": "Customer not found"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}