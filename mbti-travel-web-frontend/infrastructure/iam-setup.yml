AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Resources for MBTI Travel Frontend Deployment'

Parameters:
  UserName:
    Type: String
    Description: 'IAM User name for deployment (optional - can use existing user)'
    Default: ''
  
  CreateUser:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Whether to create a new IAM user or attach policy to existing role'

Conditions:
  ShouldCreateUser: !Equals [!Ref CreateUser, 'true']
  HasUserName: !Not [!Equals [!Ref UserName, '']]

Resources:
  # IAM Policy for Frontend Deployment
  FrontendDeploymentPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: 'MBTITravelFrontendDeploymentPolicy'
      Description: 'Policy for deploying MBTI Travel Frontend to AWS'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CloudFormationAccess
            Effect: Allow
            Action:
              - 'cloudformation:CreateStack'
              - 'cloudformation:UpdateStack'
              - 'cloudformation:DeleteStack'
              - 'cloudformation:DescribeStacks'
              - 'cloudformation:DescribeStackEvents'
              - 'cloudformation:DescribeStackResources'
              - 'cloudformation:GetTemplate'
              - 'cloudformation:ListStacks'
              - 'cloudformation:ValidateTemplate'
              - 'cloudformation:CreateChangeSet'
              - 'cloudformation:DescribeChangeSet'
              - 'cloudformation:ExecuteChangeSet'
              - 'cloudformation:DeleteChangeSet'
              - 'cloudformation:ListChangeSets'
            Resource:
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:stack/mbti-travel-frontend-*/*'
              - !Sub 'arn:aws:cloudformation:*:${AWS::AccountId}:changeSet/mbti-travel-frontend-*/*'
          
          - Sid: S3BucketAccess
            Effect: Allow
            Action:
              - 's3:CreateBucket'
              - 's3:DeleteBucket'
              - 's3:GetBucketLocation'
              - 's3:GetBucketPolicy'
              - 's3:PutBucketPolicy'
              - 's3:DeleteBucketPolicy'
              - 's3:GetBucketWebsite'
              - 's3:PutBucketWebsite'
              - 's3:DeleteBucketWebsite'
              - 's3:GetBucketVersioning'
              - 's3:PutBucketVersioning'
              - 's3:GetBucketCORS'
              - 's3:PutBucketCORS'
              - 's3:DeleteBucketCORS'
              - 's3:GetBucketLifecycleConfiguration'
              - 's3:PutBucketLifecycleConfiguration'
              - 's3:DeleteBucketLifecycleConfiguration'
              - 's3:GetBucketPublicAccessBlock'
              - 's3:PutBucketPublicAccessBlock'
              - 's3:DeleteBucketPublicAccessBlock'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws:s3:::mbti-travel-frontend-*'
          
          - Sid: S3ObjectAccess
            Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
              - 's3:GetObjectVersion'
              - 's3:DeleteObjectVersion'
              - 's3:PutObjectAcl'
              - 's3:GetObjectAcl'
            Resource:
              - !Sub 'arn:aws:s3:::mbti-travel-frontend-*/*'
          
          - Sid: CloudFrontAccess
            Effect: Allow
            Action:
              - 'cloudfront:CreateDistribution'
              - 'cloudfront:GetDistribution'
              - 'cloudfront:GetDistributionConfig'
              - 'cloudfront:UpdateDistribution'
              - 'cloudfront:DeleteDistribution'
              - 'cloudfront:ListDistributions'
              - 'cloudfront:CreateInvalidation'
              - 'cloudfront:GetInvalidation'
              - 'cloudfront:ListInvalidations'
              - 'cloudfront:CreateCloudFrontOriginAccessIdentity'
              - 'cloudfront:GetCloudFrontOriginAccessIdentity'
              - 'cloudfront:GetCloudFrontOriginAccessIdentityConfig'
              - 'cloudfront:UpdateCloudFrontOriginAccessIdentity'
              - 'cloudfront:DeleteCloudFrontOriginAccessIdentity'
              - 'cloudfront:ListCloudFrontOriginAccessIdentities'
              - 'cloudfront:TagResource'
              - 'cloudfront:UntagResource'
              - 'cloudfront:ListTagsForResource'
            Resource: '*'
          
          - Sid: Route53Access
            Effect: Allow
            Action:
              - 'route53:CreateHostedZone'
              - 'route53:GetHostedZone'
              - 'route53:ListHostedZones'
              - 'route53:DeleteHostedZone'
              - 'route53:ChangeResourceRecordSets'
              - 'route53:GetChange'
              - 'route53:ListResourceRecordSets'
              - 'route53:GetHealthCheck'
              - 'route53:CreateHealthCheck'
              - 'route53:DeleteHealthCheck'
              - 'route53:ListHealthChecks'
            Resource: '*'
          
          - Sid: CertificateManagerAccess
            Effect: Allow
            Action:
              - 'acm:RequestCertificate'
              - 'acm:DescribeCertificate'
              - 'acm:ListCertificates'
              - 'acm:DeleteCertificate'
              - 'acm:AddTagsToCertificate'
              - 'acm:ListTagsForCertificate'
              - 'acm:RemoveTagsFromCertificate'
            Resource: '*'
          
          - Sid: IAMRoleAccess
            Effect: Allow
            Action:
              - 'iam:CreateRole'
              - 'iam:GetRole'
              - 'iam:DeleteRole'
              - 'iam:PutRolePolicy'
              - 'iam:GetRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:AttachRolePolicy'
              - 'iam:DetachRolePolicy'
              - 'iam:ListRolePolicies'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:PassRole'
              - 'iam:TagRole'
              - 'iam:UntagRole'
              - 'iam:ListRoleTags'
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/GitHubActions-MBTITravel-*'
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/mbti-travel-*'
          
          - Sid: STSAccess
            Effect: Allow
            Action:
              - 'sts:GetCallerIdentity'
              - 'sts:AssumeRole'
            Resource: '*'

  # IAM User for deployment (optional)
  DeploymentUser:
    Type: AWS::IAM::User
    Condition: ShouldCreateUser
    Properties:
      UserName: !If [HasUserName, !Ref UserName, 'mbti-travel-deployment-user']
      ManagedPolicyArns:
        - !Ref FrontendDeploymentPolicy
      Tags:
        - Key: Project
          Value: MBTI-Travel-Frontend
        - Key: Purpose
          Value: Deployment

  # Access Keys for the deployment user (optional)
  DeploymentUserAccessKey:
    Type: AWS::IAM::AccessKey
    Condition: ShouldCreateUser
    Properties:
      UserName: !Ref DeploymentUser

  # Role for GitHub Actions OIDC
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'GitHubActions-MBTITravel-Deployment'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Sub 'arn:aws:iam::${AWS::AccountId}:oidc-provider/token.actions.githubusercontent.com'
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
              StringLike:
                'token.actions.githubusercontent.com:sub': 'repo:*:*'  # Update with your repo
      ManagedPolicyArns:
        - !Ref FrontendDeploymentPolicy
      Tags:
        - Key: Project
          Value: MBTI-Travel-Frontend
        - Key: Purpose
          Value: GitHubActions

Outputs:
  PolicyArn:
    Description: 'ARN of the deployment policy'
    Value: !Ref FrontendDeploymentPolicy
    Export:
      Name: !Sub '${AWS::StackName}-PolicyArn'
  
  GitHubActionsRoleArn:
    Description: 'ARN of the GitHub Actions role'
    Value: !GetAtt GitHubActionsRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-GitHubActionsRoleArn'
  
  DeploymentUserArn:
    Condition: ShouldCreateUser
    Description: 'ARN of the deployment user'
    Value: !GetAtt DeploymentUser.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentUserArn'
  
  AccessKeyId:
    Condition: ShouldCreateUser
    Description: 'Access Key ID for deployment user'
    Value: !Ref DeploymentUserAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-AccessKeyId'
  
  SecretAccessKey:
    Condition: ShouldCreateUser
    Description: 'Secret Access Key for deployment user (store securely!)'
    Value: !GetAtt DeploymentUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-SecretAccessKey'